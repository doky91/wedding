-- MySQL Script generated by MySQL Workbench
-- Tue Jan 25 16:00:15 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema c_test
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema c_test
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `c_test` DEFAULT CHARACTER SET utf8 ;
USE `c_test` ;

-- -----------------------------------------------------
-- Table `c_test`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `picture_url` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`offer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`offer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `category_id` INT NULL,
  `picture_url` TEXT NULL,
  `name` VARCHAR(255) NULL,
  `description` TEXT NULL,
  `contact_person` VARCHAR(255) NULL,
  `contact_phone` VARCHAR(45) NULL,
  `contact_email` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_category_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_category`
    FOREIGN KEY (`category_id`)
    REFERENCES `c_test`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`currency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`currency` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `country` VARCHAR(255) NULL,
  `short_id` VARCHAR(3) NULL,
  `rate` FLOAT(8,2) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`service_package`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`service_package` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `offer_id` INT NULL,
  `name` VARCHAR(255) NULL,
  `description` TEXT NULL,
  `price` FLOAT NULL,
  `price_currency_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_service_idx` (`offer_id` ASC) VISIBLE,
  INDEX `fk_currency_idx` (`price_currency_id` ASC) VISIBLE,
  CONSTRAINT `fk_offer_key`
    FOREIGN KEY (`offer_id`)
    REFERENCES `c_test`.`offer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_currency`
    FOREIGN KEY (`price_currency_id`)
    REFERENCES `c_test`.`currency` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`package_availability`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`package_availability` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `service_package_id` INT NULL,
  `available_from` DATETIME NULL,
  `available_to` DATETIME NULL,
  `available_on_day` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_package_id_idx` (`service_package_id` ASC) VISIBLE,
  CONSTRAINT `fk_package_id`
    FOREIGN KEY (`service_package_id`)
    REFERENCES `c_test`.`service_package` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`event_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`event_service` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NULL,
  `offer_id` INT NULL,
  `selected` BIT(1) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_service_idx` (`offer_id` ASC) VISIBLE,
  INDEX `fk_event_idx` (`event_id` ASC) VISIBLE,
  CONSTRAINT `fk_offer_id`
    FOREIGN KEY (`offer_id`)
    REFERENCES `c_test`.`offer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event`
    FOREIGN KEY (`event_id`)
    REFERENCES `c_test`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NULL,
  `password` VARCHAR(150) NULL,
  `email` VARCHAR(150) NULL,
  `roles` TEXT NULL,
  `active` BIT(1) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`user_event_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`user_event_role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `c_test`.`event_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `c_test`.`event_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `offer_id` INT NULL,
  `user_id` INT NULL,
  `event_role_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_event_idx` (`offer_id` ASC) VISIBLE,
  INDEX `fk_user_id_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_event_role_idx` (`event_role_id` ASC) VISIBLE,
  CONSTRAINT `fk_event_key`
    FOREIGN KEY (`offer_id`)
    REFERENCES `c_test`.`event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `c_test`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_role_key`
    FOREIGN KEY (`event_role_id`)
    REFERENCES `c_test`.`user_event_role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
